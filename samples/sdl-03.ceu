#include "sdl.ceu"

input void SDL_REDRAW;
input void SDL_QUIT;

var SDL sdl = SDL.build("SDL 3", 800,480);

var SDL_Rect  bg     = SDL_Rect(0,0 , sdl.w,sdl.h);
var SDL_Color bg_clr = SDL_Color(0x00, 0x00, 0x00, 0xFF);

class Rect with
    var _SDL_Renderer& ren;
    var SDL_Rect       rect;
    var int            v;
do
    var SDL_Color clr = SDL_Color(0xFF, 0xFF, 0xFF, 0xFF);

    par/or do
        loop do
            await (1000/this.v) ms;
            rect.x = rect.x + 1;
            if rect.x > 500 then
                break;
            end
        end
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&ren, clr.r,clr.g,clr.b,0xFF);
            _SDL_RenderFillRect(&&ren, (_SDL_Rect&&)&&rect);
        end
    end
end

par/or do
    await SDL_QUIT;
with
    every SDL_REDRAW do
        _SDL_SetRenderDrawColor(&&sdl.ren, bg_clr.r,bg_clr.g,bg_clr.b,0xFF);
        _SDL_RenderFillRect(&&sdl.ren, (_SDL_Rect&&)&&bg);
    end
with
    loop do
        par/or do
            await 10s;
        with
            do
                pool Rect[5] rs;
                every 1s do
                    spawn Rect in rs with
                        this.ren  = &sdl.ren;
                        this.rect = SDL_Rect(100, 100+_rand()%300, 20,20);
                        this.v    = 5 + _rand()%100;
                    end;
                end
            end
        end
    end
with
    every SDL_REDRAW do
        _SDL_RenderPresent(&&sdl.ren);
    end
end

escape 0;
