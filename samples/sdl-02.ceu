#include "sdl/sdl.ceu"

code/await Rect (var& _SDL_Renderer ren, var SDL_Rect rect, var int speed)
                    => void
do
    par/or do
        loop do
            await (1000/speed) ms;
            rect.x = rect.x + 3;
            if rect.x > 500 then
                break;
            end
        end
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&ren, 0xFF,0xFF,0xFF,0xFF);
            _SDL_RenderFillRect(&&ren, &&rect as _SDL_Rect&&);
        end
    end
end

var& _SDL_Renderer ren;
watching SDL_go("SDL 2", 800,480, _) => (ren) do
    par do
        var SDL_Color bg = val SDL_Color(0x00,0x00,0x00,0xFF);
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&ren, bg.r,bg.g,bg.b,bg.a);
            _SDL_RenderClear(&&ren);
        end
    with
        loop do
            watching 10s do
                par do
                    await Rect(&ren, SDL_Rect(100,100,20,20), 25);
                with
                    await Rect(&ren, SDL_Rect(100,200,40,40), 10);
                end
            end
        end
    end
end

escape 0;
