#include "sdl.ceu"
#include "sdl-gfx.ceu"

input void SDL_REDRAW;
input void SDL_QUIT;

var int win_w;
var int win_h;
var _SDL_Window* win;
    finalize
        win = _SDL_CreateWindow("SDL 1",
                            500, 1300, 800, 480, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(win);
    end

_SDL_GetWindowSize(win, &win_w, &win_h);

var _SDL_Renderer* ren;
    finalize
        ren = _SDL_CreateRenderer(win, -1, 0);
    with
        _SDL_DestroyRenderer(ren);
    end

var _SDL_Rect bg;
    bg.w = win_w;
    bg.h = win_h;
    bg.x = 0;
    bg.y = 0;

var _SDL_Color bg_clr;
    bg_clr.r = 0xFF;
    bg_clr.g = 0xFF;
    bg_clr.b = 0x00;

var _SDL_Rect fg;
    fg.w = 100;
    fg.h = 100;
    fg.x = 100;
    fg.y = 100;

var _SDL_Color fg_clr;
    fg_clr.r = 0xFF;
    fg_clr.g = 0x00;
    fg_clr.b = 0x00;

par/or do
    await SDL_QUIT;
with
    loop do
        await 1s;
        fg.x = fg.x + 10;
        fg.y = fg.y + 10;
    end
with
    loop do
        await SDL_REDRAW;

        _SDL_SetRenderDrawColor(ren, bg_clr.r,bg_clr.g,bg_clr.b,0xFF);
        _SDL_RenderFillRect(ren, &bg);

        _SDL_SetRenderDrawColor(ren, fg_clr.r,fg_clr.g,fg_clr.b,0xFF);
        _SDL_RenderFillRect(ren, &fg);

        loop i,30 do
            _pixelRGBA(ren, 10+_rand()%50, 10+_rand()%50, 100,100,100, 0xFF);
        end

        native do
            short s[5] = { 500, 550, 650, 525, 400 };
            short t[5] = { 200, 210, 250, 225, 300 };
        end

        _filledPolygonRGBA(ren, _s, _t, 5, 0,0xFF,0x00, 0xFF);

        _boxRGBA(ren, 500,200, 550,250, 0,0,0xFF, 0xBB);
        _roundedBoxRGBA(ren, 520,220, 570,270, 4, 0,0xFF,0, 0xBB);
        _roundedRectangleRGBA(ren, 540,240, 590,290, 8, 0xFF,0x0,0, 0x99);

        _SDL_RenderPresent(ren);
    end
end

return 0;
