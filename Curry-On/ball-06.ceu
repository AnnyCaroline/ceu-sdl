#define HEADER_TITLE "Ball - 04"
#include "header.ceu"

#define DCL_INT(a,v)                \
    var Integral_Over_Time _ with   \
        this.accumulator = a;       \
        this.value       = v;       \
    end

class Integral_Over_Time with
    var float& accumulator;
    var float& value;
do
    every dt in SDL_DT do
        accumulator = accumulator + value * dt/1000.0;
    end
end

data Ball with
    var float x;
    var float y;
    var float radius;
    var float z1;
    var float z2;
    var float z3;
end

var Ball ball = Ball(130,130,8, 0,0,0);

par/or do
    await SDL_QUIT;
with
    await SDL_MOUSEBUTTONDOWN;

    loop do
        do
            var float velocity=20, acceleration=20;
            DCL_INT(velocity, acceleration);
            DCL_INT(ball.x,   velocity);
            await SDL_MOUSEBUTTONDOWN;
        end
        do
            var float velocity=20, acceleration=20;
            DCL_INT(velocity, acceleration);
            DCL_INT(ball.y,   velocity);
            await SDL_MOUSEBUTTONDOWN;
        end
        do
            var float velocity=-20, acceleration=-20;
            DCL_INT(velocity, acceleration);
            DCL_INT(ball.x,   velocity);
            await SDL_MOUSEBUTTONDOWN;
        end
        do
            var float velocity=-20, acceleration=-20;
            DCL_INT(velocity, acceleration);
            DCL_INT(ball.y,   velocity);
            await SDL_MOUSEBUTTONDOWN;
        end
    end
with
    every SDL_REDRAW do

        _SDL_SetRenderDrawColor(_REN, 0xFF,0xFF,0xFF,0x00);
        _SDL_RenderFillRect(_REN, null);

        _SDL_SetRenderDrawColor(_REN, 0x95,0x2A,0x2A,0x00);
        var SDL_Rect r1 = SDL_Rect(100,100,  200,50);
        _SDL_RenderFillRect(_REN, (_SDL_Rect*)&r1);
        var SDL_Rect r2 = SDL_Rect(100,250, 200,50);
        _SDL_RenderFillRect(_REN, (_SDL_Rect*)&r2);
        var SDL_Rect r3 = SDL_Rect(100,100, 50,200);
        _SDL_RenderFillRect(_REN, (_SDL_Rect*)&r3);
        var SDL_Rect r4 = SDL_Rect(250,100, 50,200);
        _SDL_RenderFillRect(_REN, (_SDL_Rect*)&r4);

        _SDL_SetRenderDrawColor(_REN, 0x00,0x00,0xFF,0x00);
        _filledCircleRGBA(_REN, (int)ball.x, (int)ball.y, (int)ball.radius,
                               0x00,0x00,0x00,0xFF);

        _SDL_RenderPresent(_REN);
    end
end

escape 0;
